import{_ as t,p,q as i,s,G as n,t as o,J as a,n as c}from"./framework-4a7f5a2b.js";const l={},r=a(`<h3 id="vant-list样式渲染错位-异常" tabindex="-1"><a class="header-anchor" href="#vant-list样式渲染错位-异常" aria-hidden="true">#</a> vant-list样式渲染错位/异常</h3><p><code>2020年11月16日</code></p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token punctuation">:</span>key=<span class="token string">&quot;item.itemName&quot;</span>    //key值必须正确，否则渲染异常！
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="选中效果" tabindex="-1"><a class="header-anchor" href="#选中效果" aria-hidden="true">#</a> 选中效果</h3><p><code>2020年11月25日</code></p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token punctuation">:</span>class=<span class="token string">&quot;select == index? &#39;active&#39;:&#39;&#39;&quot;</span>
<span class="token property">等同</span>
<span class="token punctuation">:</span>class=<span class="token string">&quot;{active: select == index}&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="自定义样式不生效-important-也不生效" tabindex="-1"><a class="header-anchor" href="#自定义样式不生效-important-也不生效" aria-hidden="true">#</a> 自定义样式不生效，!important 也不生效</h3><p><code>2020年11月26日</code></p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token selector">//使用 /deep/ 插入头部
/deep/textarea</span><span class="token punctuation">{</span><span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="van-list-的-finished-text-动态处理加" tabindex="-1"><a class="header-anchor" href="#van-list-的-finished-text-动态处理加" aria-hidden="true">#</a> Van-list 的 finished-text 动态处理加 :</h3><p>2020年11月26日\`</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code>finished-text=<span class="token string">&quot; [spring] &quot;</span>  <span class="token property">只能是字符串</span>

<span class="token punctuation">:</span>finished-text=<span class="token string">&quot;nullText&quot;</span>   可以动态
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="接口含嵌套对象" tabindex="-1"><a class="header-anchor" href="#接口含嵌套对象" aria-hidden="true">#</a> 接口含嵌套对象 :</h3><p><code>2020年11月27日</code></p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code>data = JSON.<span class="token function">stringify</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span>   处理转换为json格式
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="跳转定位偏移处理" tabindex="-1"><a class="header-anchor" href="#跳转定位偏移处理" aria-hidden="true">#</a> 跳转定位偏移处理 :</h3><p><code>2020年12月4日</code></p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">this</span><span class="token punctuation">.</span>$router<span class="token punctuation">.</span><span class="token function">afterEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">to<span class="token punctuation">,</span> from<span class="token punctuation">,</span> next</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>window<span class="token punctuation">.</span><span class="token function">scrollTo</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="data绑定图片渲染-须加require请求" tabindex="-1"><a class="header-anchor" href="#data绑定图片渲染-须加require请求" aria-hidden="true">#</a> data绑定图片渲染，须加require请求 :</h3><p><code>2021年1月16日</code></p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// data</span>
<span class="token literal-property property">imageUrl</span><span class="token operator">:</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;../../assets/actNew/actNewJa/1-19.min.png&#39;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="苹果机型定时器失效" tabindex="-1"><a class="header-anchor" href="#苹果机型定时器失效" aria-hidden="true">#</a> 苹果机型定时器失效</h3><p><code>2021年1月18日</code></p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// 苹果机不认new Date(&quot;2021-01-18&quot;) 此处调整为&quot;2021/01/18&quot;</span>
start<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">-</span><span class="token regex-delimiter">/</span><span class="token regex-flags">g</span></span><span class="token punctuation">,</span> <span class="token string">&quot;/&quot;</span><span class="token punctuation">)</span><span class="token operator">**</span><span class="token operator">**</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="带缓存局部数据刷新" tabindex="-1"><a class="header-anchor" href="#带缓存局部数据刷新" aria-hidden="true">#</a> 带缓存局部数据刷新:</h3><p><code>2021年4月1日</code></p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token function">beforeRouteEnter</span><span class="token punctuation">(</span><span class="token parameter">to<span class="token punctuation">,</span>from<span class="token punctuation">,</span>next</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
     <span class="token keyword">if</span><span class="token punctuation">(</span>from<span class="token punctuation">.</span>name <span class="token operator">===</span> <span class="token string">&#39;memberManagement&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">res</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
          	<span class="token comment">//console.log(res)   延迟赋值，缓存刷新</span>
         		 res<span class="token punctuation">.</span>detail <span class="token operator">=</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span>window<span class="token punctuation">.</span>localStorage<span class="token punctuation">.</span><span class="token function">getItem</span><span class="token punctuation">(</span><span class="token string">&quot;detailInfo&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
          <span class="token punctuation">}</span><span class="token punctuation">)</span>
     <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="构建时-window-location-not-defined" tabindex="-1"><a class="header-anchor" href="#构建时-window-location-not-defined" aria-hidden="true">#</a> 构建时 Window.location not defined:</h3><p><code>2021年7月26日</code></p><p>应尽量避免<code>window.xxx</code>事件出现在 data 赋值里，即使在开发环境中一切正常，但由于发布版本的强校验和单元测试规则，尤其vue3中会报错。</p><p>解决办法是，将<code>window.xxx</code>写在 created（vue2）,setup（vue3）,mounted（vue2\\vue3）等生命函数中。</p><h3 id="ts-生产打包-element-plus-报错" tabindex="-1"><a class="header-anchor" href="#ts-生产打包-element-plus-报错" aria-hidden="true">#</a> ts 生产打包,element-plus 报错</h3><p><code>2022年2月16日</code></p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// tsconfig.json 配置</span>

<span class="token punctuation">{</span>
	<span class="token string-property property">&quot;compilerOptions&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
		<span class="token string-property property">&quot;skipLibCheck&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token comment">// 针对element-puls的ts打包校验</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token comment">// 或</span>
<span class="token comment">// package.json 配置</span>

<span class="token string-property property">&quot;scripts&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
	<span class="token string-property property">&quot;build&quot;</span><span class="token operator">:</span> <span class="token string">&quot;vue-tsc --noEmit --skipLibCheck &amp;&amp; vite build&quot;</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_132-1-warning-charset-must-be-the-first-rule-in-the-file" tabindex="-1"><a class="header-anchor" href="#_132-1-warning-charset-must-be-the-first-rule-in-the-file" aria-hidden="true">#</a> :132:1: warning: &quot;@charset&quot; must be the first rule in the file</h3><p><code>2022年2月16日</code></p><p>删除 <code>@charset</code> 修改<code>vite.config.ts</code>文件</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// vite + vue3 + ts + element-plus 项目</span>

<span class="token literal-property property">css</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">postcss</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token literal-property property">plugins</span><span class="token operator">:</span> <span class="token punctuation">[</span>
        <span class="token punctuation">{</span>
          <span class="token literal-property property">postcssPlugin</span><span class="token operator">:</span> <span class="token string">&#39;internal:charset-removal&#39;</span><span class="token punctuation">,</span>
          <span class="token literal-property property">AtRule</span><span class="token operator">:</span> <span class="token punctuation">{</span>
            <span class="token function-variable function">charset</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">atRule</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
              <span class="token keyword">if</span> <span class="token punctuation">(</span>atRule<span class="token punctuation">.</span>name <span class="token operator">===</span> <span class="token string">&#39;charset&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                atRule<span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
              <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
          <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
      <span class="token punctuation">]</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="v-if-优雅判断" tabindex="-1"><a class="header-anchor" href="#v-if-优雅判断" aria-hidden="true">#</a> v-if 优雅判断</h3><p><code>2022年2月17日</code></p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>v<span class="token operator">-</span><span class="token keyword">if</span><span class="token operator">=</span><span class="token string">&quot; [1,2,3,4,5].includes(type) &quot;</span>

等同
v<span class="token operator">-</span><span class="token keyword">if</span><span class="token operator">=</span><span class="token string">&quot; type === 1 || type === 2 type === 3 || type === 4 || type === 5 &quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="动态传参赋值" tabindex="-1"><a class="header-anchor" href="#动态传参赋值" aria-hidden="true">#</a> 动态传参赋值</h3><p><code>2022年3月4日</code></p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">this</span><span class="token punctuation">[</span>参数<span class="token punctuation">]</span>
<span class="token keyword">this</span><span class="token punctuation">[</span>参数<span class="token punctuation">]</span><span class="token punctuation">.</span>对象属性
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="报错cannot-use-chunkhash-or-contenthash-for-chunk-in-name-chunkhash-8-js-use-hash-instead" tabindex="-1"><a class="header-anchor" href="#报错cannot-use-chunkhash-or-contenthash-for-chunk-in-name-chunkhash-8-js-use-hash-instead" aria-hidden="true">#</a> 报错Cannot use [chunkhash] or [contenthash] for chunk in &#39;[name] [chunkhash:8].js&#39; (use [hash] instead)</h3><p><code>2022年9月</code></p><p>Vue2 启动生产版时遇到这个问题 即：mode --production</p><p>原因是 vue.config.js 内 filenameHashing:true 与 hot:true 冲突。</p><p>猜想大概理解为启动生产预览后，被认定非开发者模式，不应热更新。</p><p>处理办法是将二者至少关闭一个，或者缺省。</p><h3 id="syntax-error-typeerror-this-getoptions-is-not-a-function" tabindex="-1"><a class="header-anchor" href="#syntax-error-typeerror-this-getoptions-is-not-a-function" aria-hidden="true">#</a> Syntax Error: TypeError: this.getOptions is not a function</h3><p>报错原因为 sass-loader 版本过高，需检查 node 和 <s>node-sass</s> sass（node-sass 已废弃） 版本依赖关系。</p><h3 id="vue3-native-modifier-on-v-on-directive-is-deprecated" tabindex="-1"><a class="header-anchor" href="#vue3-native-modifier-on-v-on-directive-is-deprecated" aria-hidden="true">#</a> vue3 ‘.native‘ modifier on ‘v-on‘ directive is deprecated.</h3><p>vue3 发布已经有一段时间了，发现网上一些信息更新的太不及时了。现记录。</p>`,54),u={href:"https://so.csdn.net/so/search?q=native&spm=1001.2101.3001.7020",target:"_blank",rel:"noopener noreferrer"},d=a(`<div class="language-vue line-numbers-mode" data-ext="vue"><pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span>
  <span class="token comment">&lt;!-- ✓ 正确写法 --&gt;</span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>CoolInput</span> <span class="token attr-name"><span class="token namespace">v-on:</span>keydown.enter</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>onKeydownEnter<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>CoolInput</span> <span class="token attr-name">@keydown.enter</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>onKeydownEnter<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
 
  <span class="token comment">&lt;!-- ✗ 错误写法 --&gt;</span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>CoolInput</span> <span class="token attr-name"><span class="token namespace">v-on:</span>keydown.native</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>onKeydown<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>CoolInput</span> <span class="token attr-name">@keydown.enter.native</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>onKeydownEnter<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="pinia-getactivepinia-was-called-with-no-active-pinia-did-you-forget-to-install-pinia" tabindex="-1"><a class="header-anchor" href="#pinia-getactivepinia-was-called-with-no-active-pinia-did-you-forget-to-install-pinia" aria-hidden="true">#</a> Pinia:getActivePinia was called with no active Pinia. Did you forget to install pinia?</h3><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> useStore <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@/stores&#39;</span><span class="token punctuation">;</span>
<span class="token comment">// 进来直接调用，pinia 还没来得及挂载，</span>
<span class="token comment">// 需要将调用延时或写进调用方法里面，随用随取</span>
<span class="token keyword">const</span> store <span class="token operator">=</span> <span class="token function">useStore</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// --&gt; 写进具体方法内</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="this-options-data-重置时报错" tabindex="-1"><a class="header-anchor" href="#this-options-data-重置时报错" aria-hidden="true">#</a> this.$options.data() 重置时报错</h3><p>在 data 赋值时，如果使用了 this ，如：<code>ex: this.$router.xx</code>，this.$options.data()场景就会报错。</p><p>解决方法：<code>this.$options.data.call(this)</code></p><p>这是因为 this 指向错误，会导致默认的this可能会指向全局的vue对象。</p>`,7);function v(k,h){const e=c("ExternalLinkIcon");return p(),i("div",null,[r,s("p",null,[n("原因就是'."),s("a",u,[n("native"),o(e)]),n("'修饰符在 vue3 中被弃用了。我看的那个文档没有看到这个。")]),d])}const g=t(l,[["render",v],["__file","22101801.html.vue"]]);export{g as default};
