import{_ as o,p as c,q as a,w as d,s as e,G as s,J as r}from"./framework-4a7f5a2b.js";const t={},i=e("div",{class:"custom-container tip"},[e("svg",{xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},[e("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[e("circle",{cx:"12",cy:"12",r:"9"}),e("path",{d:"M12 8h.01"}),e("path",{d:"M11 12h1v4h1"})])]),e("p",{class:"custom-container-title"},"TIP"),e("p",null,[s("持续更新 ..."),e("br"),s(" 近期更新： 2021-06-30  ")])],-1),l=r('<h2 id="前述" tabindex="-1"><a class="header-anchor" href="#前述" aria-hidden="true">#</a> # 前述:</h2><p>在日新月异的技术迭代的环境下，越来越多的丰富技术栈岑出不穷。<br> 在做项目或练习的时候，我们也许会陷入纠结：</p><blockquote><ul><li>是不是用 XXX 更好更有效率？</li><li>某某大神/大牛用了 XXX 框架和 XXX 技术。</li><li>我不用 XXX 技术会不会显得水平低 ……</li></ul></blockquote><hr><h2 id="是-vue-还是-react-框架-6-30" tabindex="-1"><a class="header-anchor" href="#是-vue-还是-react-框架-6-30" aria-hidden="true">#</a> 是 Vue 还是 React？ <code>[框架]</code> <code>6.30</code></h2><ul><li>待更新</li></ul><h2 id="是-typescript-还是-javascript-js-6-28" tabindex="-1"><a class="header-anchor" href="#是-typescript-还是-javascript-js-6-28" aria-hidden="true">#</a> 是 TypeScript 还是 JavaScript？ <code>[JS]</code> <code>6.28</code></h2><ul><li>Ts是Js的超集，可以理解为js的拓展化。</li><li>类似 ES5 -&gt; ES6，Js -&gt; Ts</li><li>Ts严格规范了动态类型，强调Type，否则报错。</li><li>Ts需要编译成Js才能运行。</li></ul><p>如果你经历过 ES5 -&gt; ES6 的焕新，那么为什么出现和使用 Ts 不难理解。 Ts目前给我的印象是：不强求但足够有吸引力。因此推荐尽快掌握并应用，对技术提升和能力表现会有大大的加分。<br> 当然，用一辈子 JavaScript 也不是不行。</p><h2 id="less-、sass-or-stylus-css-6-26" tabindex="-1"><a class="header-anchor" href="#less-、sass-or-stylus-css-6-26" aria-hidden="true">#</a> Less 、Sass or Stylus? <code>[CSS]</code> <code>6.26</code></h2><p>简单说，Less 和 Sass 都丰富了 CSS。你掌握了它们，一定会提高效率。<br> 这两者的对比和优缺点不赘述于此，一搜一堆。 相较而言，Sass 更有利于项目的延展性和可维护性，也会提高技术的亮点。 而 <code>Stylus</code> ？不严格，喜欢的话不难上手。<br> 总的来说，更推荐好好把玩 <code>Sass</code>。</p><h2 id="是-vscode-还是其它-tools-6-26" tabindex="-1"><a class="header-anchor" href="#是-vscode-还是其它-tools-6-26" aria-hidden="true">#</a> 是 VsCode 还是其它？ <code>[Tools]</code> <code>6.26</code></h2><p><code>VsCode</code> <code>Sublime</code> <code>HbuilderX</code> <code>Eclipse</code> <code>Atom</code> 等等</p><p>这么多编辑器我选择 HbuilderX 无非是因为习惯，VsCode 也会配合用。<br> 原因很简单，各有好处 + 最大效率化，也不必纠结。</p><ul><li>喜欢折腾，主题强迫症选择 VsCode，也符合主流习性，便于交流；</li><li>喜欢柔和一点或有 uni-app 需求或多项目管理，使用 Hbuilder 也合适。</li></ul><p>但一定要明确，使用工具可能会提高效率，但不会增加能力。追求卓越的话，更应该把注意力放在解决问题的能力上。</p>',16);function n(h,p){return c(),a("div",null,[i,d(" more "),l])}const S=o(t,[["render",n],["__file","21062601.html.vue"]]);export{S as default};
